server {
    listen 80;
    index index.php;
    server_name site.local;
    error_log  /var/log/nginx/site-error.log;
    access_log /var/log/nginx/site-access.log;
    root /var/www/site;

    #error_page  404              /404.html;

   # redirect server error pages to the static page /50x.html
   #
   # error_page   500 502 503 504  /50x.html;
   # location = /50x.html {
   #     root   /usr/share/nginx/html;
   # }

   # proxy the PHP scripts to Apache listening on 127.0.0.1:80
   #
   #location ~ \.php$ {
   #    proxy_pass   http://127.0.0.1;
   #}

   # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
   #
   location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }
  location ~ \.php$ {
        try_files                 $uri =404;
        fastcgi_pass              php:9000;
        fastcgi_index             index.php;
        fastcgi_param             SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_intercept_errors  on;
        fastcgi_buffers           16 16k;
        fastcgi_buffer_size       32k;
        fastcgi_param PHP_VALUE "upload_max_filesize=256M \n post_max_size=256M \n max_input_vars=5000 \n max_execution_time = 300";

        include                   fastcgi_params;
  }
   # deny access to .htaccess files, if Apache's document root
   # concurs with nginx's one
   #
   location ~ /\.ht {
      deny  all;
   }
   location = /favicon.ico {
          log_not_found off;
          access_log off;
  }

  location = /robots.txt {
          allow all;
          log_not_found off;
          access_log off;
  }
  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            log_not_found off;
    }

}
